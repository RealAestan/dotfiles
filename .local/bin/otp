#!/bin/sh

# Get a one-time password, or add a OTP secret to your pass-otp store.

# The assumption of this script is that all otp passwords are stored with the
# name `otp.gpg`. This script automatically appends newly added otps as such.

# For OTP passwords to be generated properly, it is important for the local
# computer to have its time properly synced. This can be done with the command
# below which requires the package `ntp`.

ifinstalled pass pass-otp || exit 1

dir="${PASSWORD_STORE_DIR}"

choice="$({ echo "ðŸ†•add" ; echo "ðŸ•™sync-time" ; find "$dir" -name otp.gpg -printf '%P\n' ; } | rev | cut -d"." -f2-  | rev | dmenu -l 20 -c -bw 2 -p "Pick a 2FA:")"

case $choice in
	ðŸ†•add )
        ifinstalled zbar || exit 1

        temp=$(mktemp -p "$XDG_RUNTIME_DIR" --suffix=.png)
		otp="otp-test-script"
		trap 'rm -f $temp; pass rm -f $otp' HUP INT QUIT TERM PWR EXIT

        addmethod="$({ echo "image" ; echo "webcam" ; } | dmenu -l 2 -c -bw 2 -p "How:")"

        case $addmethod in
            screenshot )
                ifinstalled maim || exit 1
		        notify-send "Scan the image." "Scan the OTP QR code."
                maim -s "$temp" || exit 1
		        info="$(zbarimg -q --raw "$temp")"
                ;;
            webcam )
                notify-send "Use your webcam." "Scan the OTP QR code."
                info="$(zbarcam -q --raw)"
                while [ ! -s "$info" ]; do
                    sleep 1
                done
                ;;
        esac

		if echo "$info" | pass otp insert "$otp"; then
            folder="$(echo | dmenu -p "Where this One Time Password should be stored:")"
			pass mv "$otp" "$folder/otp"
			notify-send "Successfully added." "$folder/otp has been created."
		else
			notify-send "No OTP data found." "Try to scan the image again more precisely."
		fi
		;;
	ðŸ•™sync-time )
		ifinstalled ntp || exit 1
		notify-send -u low "ðŸ•™ Synchronizing Time..." "Synching time with remote NTP servers..."
		updatedata="$(sudo ntpdate pool.ntp.org)" &&
		notify-send -u low "ðŸ•™ Synchronizing Time..." "Done. Time changed by ${updatedata#*offset }"
		;;
	*) pass otp -c "${choice}" ;;
esac
